name: Terraform Plan

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'

env:
  AWS_REGION: ap-southeast-1

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, staging, prod]
    
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      id: init
      working-directory: terraform/environments/${{ matrix.environment }}
      run: terraform init

    - name: Terraform Validate
      id: validate
      working-directory: terraform/environments/${{ matrix.environment }}
      run: terraform validate

    - name: Terraform Plan
      id: plan
      working-directory: terraform/environments/${{ matrix.environment }}
      run: |
        terraform plan -no-color -out=tfplan-${{ matrix.environment }}
      continue-on-error: true

    - name: Save Plan Output
      working-directory: terraform/environments/${{ matrix.environment }}
      run: |
        terraform show -no-color tfplan-${{ matrix.environment }} > plan-output-${{ matrix.environment }}.txt

    - name: Comment PR with Plan
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = './terraform/environments/${{ matrix.environment }}/plan-output-${{ matrix.environment }}.txt';
          
          let planOutput = '';
          try {
            planOutput = fs.readFileSync(path, 'utf8');
          } catch (err) {
            planOutput = 'Could not read plan output file';
          }

          // Limit output length to avoid GitHub comment size limits
          if (planOutput.length > 60000) {
            planOutput = planOutput.substring(0, 60000) + '\n...\n[Output truncated due to length]';
          }

          const output = `#### Terraform Format and Style üñå \`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ \`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan for ${{ matrix.environment }} environment</summary>

          \`\`\`
          ${planOutput}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Environment: \`${{ matrix.environment }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ matrix.environment }}
        path: terraform/environments/${{ matrix.environment }}/tfplan-${{ matrix.environment }}
        retention-days: 30

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: terraform-plan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: terraform/
        framework: terraform
        output_format: sarif
        output_file_path: checkov-report.sarif
        quiet: true
        soft_fail: true

    - name: Upload Checkov SARIF
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: checkov-report.sarif

  cost-estimation:
    name: Cost Estimation
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Infracost
      uses: infracost/actions/setup@v2
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}

    - name: Generate Infracost JSON
      run: |
        infracost breakdown --path=terraform/environments/prod \
          --format=json \
          --out-file=/tmp/infracost.json || echo "Infracost failed, continuing..."

    - name: Post Infracost comment
      if: hashFiles('/tmp/infracost.json') != ''
      uses: infracost/actions/comment@v1
      with:
        path: /tmp/infracost.json
        behavior: update